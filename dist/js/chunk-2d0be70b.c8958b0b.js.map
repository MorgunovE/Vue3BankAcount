{"version":3,"sources":["webpack:///./src/views/Auth.vue","webpack:///./src/use/login-form.js","webpack:///./src/views/Auth.vue?eea7"],"names":["for","class","onSubmit","eError","type","id","email","eBlur","pError","password","pBlur","disabled","isSubmitting","tooManySubmits","register","useLoginForm","store","useStore","router","useRouter","useForm","handleSubmit","submitCount","values","dispatch","push","console","log","computed","value","watch","val","setTimeout","MIN_LENGTH","useField","yup","trim","required","errorMessage","handleBlur","min","name","setup","route","query","message","error","render","__scopeId"],"mappings":"qNAEI,eAA6B,UAAzB,wBAAoB,G,EAGtB,eAAgC,SAAzBA,IAAI,SAAQ,SAAK,G,YAKxB,eAAsC,SAA/BA,IAAI,YAAW,YAAQ,G,mBAO1BC,MAAM,e,wEAhBd,eAiBO,QAjBDA,MAAM,OAAQ,SAAM,8CAAU,EAAAC,UAAA,EAAAA,SAAA,qBAAQ,e,CAC1C,EAEA,eAIM,OAJAD,MAAK,yBAA6B,EAAAE,U,CACtC,E,eACA,eAA6D,SAAtDC,KAAK,QAAQC,GAAG,Q,qDAAiB,EAAAC,MAAK,IAAG,OAAI,8BAAE,EAAAC,OAAA,EAAAA,MAAA,sB,mBAAd,EAAAD,SAC3B,EAAAH,Q,iBAAb,eAAuC,yBAAhB,EAAAA,QAAM,I,0BAE/B,eAIM,OAJAF,MAAK,yBAA6B,EAAAO,U,CACtC,E,eACA,eAAsE,SAA/DJ,KAAK,WAAWC,GAAG,W,qDAAoB,EAAAI,SAAQ,IAAG,OAAI,8BAAE,EAAAC,OAAA,EAAAA,MAAA,sB,mBAAjB,EAAAD,YACjC,EAAAD,Q,iBAAb,eAAuC,yBAAhB,EAAAA,QAAM,I,0BAG/B,eAAqG,UAA7FP,MAAM,cAAcG,KAAK,SAAUO,SAAU,EAAAC,cAAgB,EAAAC,gBAAgB,UAAO,gBAC5F,eAA+D,UAAvDZ,MAAM,MAAO,QAAK,8CAAU,EAAAa,UAAA,EAAAA,SAAA,qBAAQ,eAAE,YACd,EAAAD,gB,iBAAhC,eAAqF,OAArF,EAAgD,mC,sICX7C,SAASE,IACd,IAAMC,EAAQC,iBACRC,EAASC,iBAFc,EAIqBC,iBAA3CC,EAJsB,EAItBA,aAAcT,EAJQ,EAIRA,aAAcU,EAJN,EAIMA,YAE7BpB,EAAWmB,EAAY,yDAAC,WAAME,GAAN,0GAEpBP,EAAMQ,SAAS,aAAcD,GAFT,OAG1BL,EAAOO,KAAK,KAHc,kDAK1BC,QAAQC,IAAR,MAL0B,wDAAD,uDASvBb,EAAWO,EAAY,yDAAC,WAAME,GAAN,0GAEpBP,EAAMQ,SAAS,gBAAiBD,GAFZ,OAG1BL,EAAOO,KAAK,KAHc,kDAK1BC,QAAQC,IAAR,MAL0B,wDAAD,uDASvBd,EAAiBe,gBAAS,kBAAMN,EAAYO,OAAS,KAE3DC,eAAMjB,GAAgB,SAAAkB,GAChBA,GACFC,YAAW,WACTV,EAAYO,MAAQ,IACnB,SAIP,IAAMI,EAAa,EAlCU,EAoCmCC,eAC9D,QACAC,SAEGC,OACAC,SAAS,qBACT/B,MAAM,8BANGA,EApCe,EAoCtBuB,MAA4B1B,EApCN,EAoCRmC,aAAkC/B,EApC1B,EAoCcgC,WApCd,EA4CsCL,eACjE,WACAC,SAEGC,OACAC,WACAG,IAAIP,IANKxB,EA5Ce,EA4CtBoB,MAA+BrB,EA5CT,EA4CL8B,aAAkC5B,EA5C7B,EA4CiB6B,WAS9C,MAAO,CACLjC,QACAH,SACAI,QACAE,WACAD,SACAE,QACAR,WACAU,eACAC,iBACAC,Y,gBD1Ca,GACb2B,KAAM,OACNC,MAFa,WAGX,IAAMC,EAAQ,iBACR3B,EAAQ,iBAQd,OAPI2B,EAAMC,MAAMC,SACd7B,EAAMQ,SAAS,aAAc,CAC3BK,MAAO,OAAAiB,EAAA,MAAMH,EAAMC,MAAMC,SACzBzC,KAAM,YAIV,kBACKW,OErCX,EAAOgC,OAASA,EAChB,EAAOC,UAAY,kBAEJ","file":"js/chunk-2d0be70b.c8958b0b.js","sourcesContent":["<template>\r\n  <form class=\"card\" @submit.prevent=\"onSubmit\">\r\n    <h1>Sing in Bank Account</h1>\r\n    \r\n    <div :class=\"['form-control', {invalid: eError}]\">\r\n      <label for=\"email\">Email</label>\r\n      <input type=\"email\" id=\"email\" v-model=\"email\" @blur=\"eBlur\">\r\n      <small v-if=\"eError\">{{eError}}</small>\r\n    </div>\r\n    <div :class=\"['form-control', {invalid: pError}]\">\r\n      <label for=\"password\">Password</label>\r\n      <input type=\"password\" id=\"password\" v-model=\"password\" @blur=\"pBlur\">\r\n      <small v-if=\"pError\">{{pError}}</small>\r\n    </div>\r\n    \r\n    <button class=\"btn primary\" type=\"submit\" :disabled=\"isSubmitting || tooManySubmits\">Sing In</button>\r\n    <button class=\"btn\" @click.prevent=\"register\">Register</button>\r\n    <span class=\"text-danger\" v-if=\"tooManySubmits\"> Too many times submitted form</span>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\n  import {useLoginForm} from '../use/login-form'\r\n  import {useRoute} from 'vue-router'\r\n  import {useStore} from 'vuex'\r\n  import {error} from '../utils/error'\r\n  \r\n  export default {\r\n    name: \"Auth\",\r\n    setup() {\r\n      const route = useRoute()\r\n      const store = useStore()\r\n      if (route.query.message) {\r\n        store.dispatch('setMessage', {\r\n          value: error(route.query.message),\r\n          type: 'warning'\r\n        })\r\n      }\r\n      \r\n      return {\r\n        ...useLoginForm()\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import {useField, useForm} from 'vee-validate'\r\nimport {computed, watch} from 'vue'\r\nimport * as yup from 'yup'\r\nimport {useStore} from 'vuex'\r\nimport {useRouter} from 'vue-router'\r\n\r\nexport function useLoginForm() {\r\n  const store = useStore()\r\n  const router = useRouter()\r\n  \r\n  const {handleSubmit, isSubmitting, submitCount} = useForm()\r\n  \r\n  const onSubmit = handleSubmit(async values => {\r\n    try {\r\n      await store.dispatch('auth/login', values)\r\n      router.push('/')\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  })\r\n  \r\n  const register = handleSubmit(async values => {\r\n    try {\r\n      await store.dispatch('auth/register', values)\r\n      router.push('/')\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  })\r\n  \r\n  const tooManySubmits = computed(() => submitCount.value >= 3)\r\n  \r\n  watch(tooManySubmits, val => {\r\n    if (val) {\r\n      setTimeout(() => {\r\n        submitCount.value = 0\r\n      }, 1500)\r\n    }\r\n  })\r\n  \r\n  const MIN_LENGTH = 6\r\n  \r\n  const {value: email, errorMessage: eError, handleBlur: eBlur} = useField(\r\n    'email',\r\n    yup\r\n      .string()\r\n      .trim()\r\n      .required('Please type EMAIL')\r\n      .email(\"Please type correct EMAIL\")\r\n  )\r\n  const {value: password, errorMessage: pError, handleBlur: pBlur} = useField(\r\n    'password',\r\n    yup\r\n      .string()\r\n      .trim()\r\n      .required()\r\n      .min(MIN_LENGTH)\r\n  )\r\n  \r\n  return {\r\n    email,\r\n    eError,\r\n    eBlur,\r\n    password,\r\n    pError,\r\n    pBlur,\r\n    onSubmit,\r\n    isSubmitting,\r\n    tooManySubmits,\r\n    register\r\n  }\r\n}\r\n","import { render } from \"./Auth.vue?vue&type=template&id=b91ad9ca&scoped=true\"\nimport script from \"./Auth.vue?vue&type=script&lang=js\"\nexport * from \"./Auth.vue?vue&type=script&lang=js\"\nscript.render = render\nscript.__scopeId = \"data-v-b91ad9ca\"\n\nexport default script"],"sourceRoot":""}